/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2016-03-30 21:27:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.flows;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class maintenance_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<div>\n");
      out.write("\t<h2 class=\"alt\">Maintenance Management</h2>\n");
      out.write("\t<h4 class=\"alt\"><a href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\">Home</a></h4>\n");
      out.write("\t<hr>\n");
      out.write("\t<h5>Perform zero-downtime maintenance to your commissioned system.</h5>\n");
      out.write("\t<br>\n");
      out.write("\t<i>Browse the Aurea Asset Repository for latest patches. We will also make\n");
      out.write("\trecommendations based on your current environment as to what patches are relevant\n");
      out.write("\tto your system. Aurea's unique technology for high availability(fault-tolerant brokers,\n");
      out.write("\tredundant or fault-tolerant application containers) allows us to apply patches with zero downtime.\n");
      out.write("\tWe'll recognize your environment redundancy setup and schedule restarts of patches \n");
      out.write("\tautomatically for you to ensure full 24x7 continuity.</i> \n");
      out.write("\t<br><br>\n");
      out.write("\t<b>Notes:</b><br>\n");
      out.write("\tAs it stands today, our patches are entirely incremental so to those in the know this comes off as spin. Still,\n");
      out.write("\tit is not an entirely unrealistic message. When we start embracing the separation of the concerns: application development\n");
      out.write("\tvs service development; those concerns are free to take on independent development and patch life-cycles.\n");
      out.write("\tAs an example, we know that Disney uses Sonic Connect REST, we can tell them pro-actively to get the latest patch ASAP\n");
      out.write("\tbecause otherwise due a CXF issue their memory is going to leak away.\n");
      out.write("\tThis helps in another area of concern that our customers have stated. British Airways complain that we never effectively communicate\n");
      out.write("\ton issues and patches that are relevant to them. It is not that we deliberately withhold information from the customer.\n");
      out.write("\tWe try our hardest. It is just that our engineering to field to customer communication lines don't always work\n");
      out.write("\tthe way they should.\n");
      out.write("\t<br><br>\n");
      out.write("\tI believe that patches are one of the asset types that should go in the repository. There are\n");
      out.write("\tsome compelling use cases for this. \n");
      out.write("Live patch of a system requires us to connect to that \n");
      out.write("\tsystem. When connected we have intimate knowledge of the customer and\n");
      out.write("\this application. We can hone the patch list down to that which is relevant to\n");
      out.write("\tthe customer's system. We can go further: <i>the ability to see impact analysis\n");
      out.write("\tagainst the customer's actual system becomes possible.</i> Take this further:<i>\n");
      out.write("\twe may be able to suggest changes to accommodate the impact</i>.\n");
      out.write("\tFinally: we can <i>apply the changes</i>, and we can <i>restart the live system \n");
      out.write("\twith promise of full 24x7 availability</i>. I suggest that when you can do all of the above,\n");
      out.write("\tyou are giving the customer a quite extraordinary experience. In terms of where the\n");
      out.write("\tcustomer is with us, he/she becomes a loyal promoter. In business terms,\n");
      out.write("\t our Net Promoter Score(NPS) goes up big time.\n");
      out.write("\t \n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\t<br><br>\n");
      out.write(" Give us your <a href=\"http://jira.aurea.local/browse/ESB-7476\" target=\"_blank\">feedback</a> on the maintenance experience.\n");
      out.write(" Additional material. insights are welcome.\t\t\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /WEB-INF/flows/maintenance.jsp(4,26) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }
}
