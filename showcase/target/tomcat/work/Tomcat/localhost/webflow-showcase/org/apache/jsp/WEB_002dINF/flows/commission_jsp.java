/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2016-03-30 21:25:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.flows;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class commission_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<div>\n");
      out.write("\t<h2 class=\"alt\">Commissioning</h2>\n");
      out.write("\t<h4 class=\"alt\"><a href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\">Home</a></h4>\n");
      out.write("\t<hr>\n");
      out.write("\t<div class=\"span-4 colborder\">\n");
      out.write("\t\t<h6>Select applications</h6>\n");
      out.write("\t\t<br/>Aurea Experience Activator makes it easy to select and deploy your applications in the cloud and on-premise hardware. AxA supports a number of options\n");
      out.write("\t\tfor application selection. You can point to an existing Workbench development environment to select\n");
      out.write("\t\tprocesses for deployment, or to a Sonic application archive(xar) created from Workbench.\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"span-14 colborder\">\n");
      out.write("\t\t<h3 class=\"alt\">Commission an Application</h3>\n");
      out.write("\t\t<div id=\"commissionFlow\">\n");
      out.write("\t\t\t<a id=\"startFlow\" href=\"commission-flow\">Start Commissioning Now</a>\n");
      out.write("\t\t\t<script type=\"text/javascript\">\n");
      out.write("\t\t\t\tSpring.addDecoration(new Spring.AjaxEventDecoration({elementId:\"startFlow\",event:\"onclick\",params:{fragments:\"body\",mode:\"embedded\"}}));\n");
      out.write("\t\t\t</script>\n");
      out.write("\t\t<br><br>\n");
      out.write(" Give us your <a href=\"http://jira.aurea.local/browse/ESB-7481\" target=\"_blank\">feedback</a> on the commissioning experience. Feedback on all\n");
      out.write(" the commissioning content is welcome including technical commentary and do-list sections. Where the word <font color=\"Red\"><i>tension</i></font> appears, it means the story is not clicking cleanly. Please give me you help and opinions particularly in these areas.\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("    <div class=\"span-5\">\n");
      out.write("\t\t<h6>Do List</h6>\n");
      out.write("\t\t<ol compact>\n");
      out.write("\t\t<li>xar upload functional in this Webflow UI(xarUpload.jsp) &#x2714;</li>\n");
      out.write("\t\t<li>dremToModel scripts accepts xars &#x2714;</li>\n");
      out.write("\t\t<li>generate drem instructions(primarily Drem.xml) - we can hard-code the pattern initially, \n");
      out.write("\t\tand, we can also do a rule-of-thumb that we'll deploy every process in the xar.\n");
      out.write("\t\tIn the longer-term there is a process selection screen similar to Workbench's.</li>\n");
      out.write("\t\t<li>run dremToModel against the xar</li>\n");
      out.write("\t\t<li>revise templates to use vdi2 placeholders for machine and ip addresses</li>\n");
      out.write("\t\t<li>generate virtualization.xml - base off the placeholder references - run sdm-deploy(Vagrant/Chef)</li>\n");
      out.write("\t\t<li>At this point everything is up and running!\n");
      out.write("\t\t</ol>\n");
      out.write("\t\t<br><br>\n");
      out.write("\t\tWhat do you think the first packaging priority for us is? Any other comments? <a href=\"http://jira.aurea.local/browse/ESB-7486\" target=\"_blank\">feedback</a>.\t\t\n");
      out.write("\t\t\n");
      out.write("\t</div>\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /WEB-INF/flows/commission.jsp(4,26) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }
}
