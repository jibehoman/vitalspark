alias IHistoricalMetric for class com.sonicsw.mf.common.metrics.IHistoricalMetric
alias IMetricIdentity for class com.sonicsw.mf.common.metrics.IMetricIdentity
alias IMetricInfo for class com.sonicsw.mf.common.metrics.IMetricInfo
alias IMetricsData for class com.sonicsw.mf.common.metrics.IMetricsData
alias IMetric for class com.sonicsw.mf.common.metrics.IMetric
alias INotification for class com.sonicsw.mf.common.runtime.INotification
alias String for class java.lang.String
alias HashSet for class java.util.HashSet

instanceof com.sonicsw.mf.common.metrics.manager.impl.MetricsManager$RegisteredMetric
{
    wrap evaluate()
    {
       long[] result =  $wrapped($$);
       long latency = java.lang.System.currentTimeMillis() - result[1];
       System.out.println($0.getMetricIdentity().toString() + " Latency:" + latency);
       return result;
    }
}
#instanceof com.sonicsw.mf.common.metrics.manager.impl.MetricsManager
#{
#   wrap getMetricsData(IMetricIdentity[], Boolean)
#   {
# 	 long start = java.lang.System.currentTimeMillis();
#	 IMetricsData md =  $wrapped($$);
#     long latency = java.lang.System.currentTimeMillis() - start;
#	 System.out.println(" getMetricsData Call for " + $1.length + "items, Latency:" + latency);
#     return md;
#   }
#}

